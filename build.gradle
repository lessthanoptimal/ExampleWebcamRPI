plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

group 'org.boofcv'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots/"}
    maven { url = "http://maven.ecs.soton.ac.uk/content/repositories/thirdparty/"}

}

dependencies {
    ['boofcv-core','boofcv-swing','boofcv-ffmpeg','boofcv-WebcamCapture'].each
            { String a -> compile group: 'org.boofcv', name: a, version: '0.35' }
    api group: 'junit', name: 'junit', version: '4.12'

    compile 'com.github.sarxos:webcam-capture-driver-raspberrypi:0.3.13-SNAPSHOT'

    compile 'com.nativelibs4java:bridj:0.7-20140918-2'
    compile 'com.github.sarxos:webcam-capture-driver-openimaj:0.3.12'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

wrapper {
    distributionType = Wrapper.DistributionType.BIN
    gradleVersion = '6.3'
}

task scanqrJar(type: Jar, dependsOn: ':build' ) {

    manifest {
        attributes 'Implementation-Title': 'RPI',
                'Implementation-Version': version,
                'Main-Class': 'WebcamScanQR'
    }

    outputs.upToDateWhen { false }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    } with jar

    doLast {
        archivePath.renameTo(file('scanqr.jar'))
    }
}

task showJar(type: Jar, dependsOn: ':build' ) {

    manifest {
        attributes 'Implementation-Title': 'RPI',
                'Implementation-Version': version,
                'Main-Class': 'ShowWebcamInWindow'
    }

    outputs.upToDateWhen { false }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    } with jar

    doLast {
        archivePath.renameTo(file('show.jar'))
    }
}